runApp('Final')
runApp('Final')
runApp('Final')
runApp()
runApp('Final')
#difftime(begin,end,units="days")
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8",
country="us",
year=2020
))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table
nrow(table)
table$type
length(table$type)
runApp('Final')
#difftime(begin,end,units="days")
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8",
country="us",
year=2020
))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
length(table$type)
runApp('Final')
install.packages("shinythemes")
library(shinythemes)
runApp('Final')
blblm(mpg~wt*hp,data=mtcars,m=3,B=100)
runApp('Final')
runApp('Final')
runApp('Final')
?textOutput
runApp('Final')
runApp('Final')
runApp('大神方案一/大神例子一.R')
runApp('大神方案一/大神例子一.R')
runApp('大神方案一/大神例子一.R')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8",
country=name_to_abb("Afghanistan"),
year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(country=table$country$name,date=table$date$iso,type=as.vector(unlist(table$type)))
table
runApp('Final')
runApp('Final')
#####hist
hist(table$date,breaks=12)
as.numeric("2020-09-09")
table$date
runApp('Final')
x <- table$date
?with
with(x,x[1:3])
"kkkksss"[1:3]
substr("kkksas",1,3)
with(x,substr(x,1,3))
as.numeric(sys.Date())
sys.Date()
Sys.Date()
Sys.Date() %>% as.numeric
#####hist
hist(as.numeric(table$date),breaks=12)
as.numeric(table$date)
#####hist
plot(table$date)
table$date
#####hist
plot(table$date,1:18)
#####hist
table$date[1]
#####hist
table$date[2]
#####hist
table$date[2] %>% as.numeric
#####hist
table$date[2] %>% as.character %>% as.numeric
#####hist
table$date[2] %>%  as.character
#####hist
table$date[2] %>%  as.character %>% as.numeric
hist(1:12,breaks=12)
hist(0:12,breaks=12)
hist(0:12,breaks=13)
hist(0:12,breaks=13)
hist(1:12,breaks=13)
Sys.Date() %>% as.numeric
Sys.Date()
"2020-06-07" %>% as.numeric
?ts
ts(table$date)
plot(ts)
as.Date("2020-07-06","%Y/%m/%d")
ts(table$date,frequency = 12)
#####hist
p <- ggplot(table,aes(x=table$date,y=table$date,group=1))+geom_line()
#####hist
ggplot(table,aes(x=table$date,y=table$date,group=1))+geom_line()
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8",
country=name_to_abb("Afghanistan"),
year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table
table$date
table$date$datetime
table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day)
table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
runApp('Final')
runApp('Final')
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
table
hist(table$month)
table$month
hist(table$MONTH)
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
hist(table$MONTH)
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
hist(table$MONTH)
hist(1:12)
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
hist(1:12,breaks=12)
hist(1:12,breaks=13)
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
hist(table$MONTH)
hist(table$MONTH)
hist(table$MONTH,xlim=c(0,12))
hist(table$MONTH,xlim=c(1,13))
hist(table$MONTH,xlim=c(1,20))
hist(1:12,xlim=c(1,20))
hist(1:12,xlim=c(0:12))
hist(1:12,xlim=c(1:12))
hist(1:12,xlim=c(1:13))
hist(1:12,xlim=c(1,20))
hist(1:12,xlim=c(0,20))
hist(1:12,xlim=c(0,12))
hist(1:12,xlim=c(0,12),breaks=12)
hist(1:12,xlim=c(0,12),breaks=11)
hist(1:12,xlim=c(0,12),breaks=10)
hist(1:12,xlim=c(0,12),breaks=c(0:12))
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=table$date$datetime$day,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table
table$states
runApp('Final')
table
table$states[1]
table$states[2]
table$states[19]
table$states[22]
table$states[495]
table$states[1]
table$states[1]$name
table$states[[1]]
table$states[[495]]
table
list=c('a')
table$MONTH
table
table[[1]]$MONTH
table[[1]]
table$states
table[1,]
list6 <- list('Alabama'=c(1,1), 'Alaska'=c(5,6))
list6
list$Alabama
list6$Alabama
states_list <- list('Alabama'=c(), 'Alaska'=c(), 'Arizona'=c(), 'Arkansas'=c(), 'California'=c(), 'Colorado'=c(), 'Connecticut'=c(), 'Delaware'=c(), 'District of Columbia'=c(), 'Florida'=c(), 'Georgia'=c(), 'Hawaii'=c(), 'Idaho'=c(), 'Illinois'=c(), 'Indiana'=c(), 'Iowa'=c(), 'Kansas'=c(), 'Kentucky'=c(), 'Louisiana'=c(), 'Maine'=c(), 'Maryland'=c(), 'Massachusetts'=c(), 'Michigan'=c(), 'Minnesota'=c(), 'Mississippi'=c(), 'Missouri'=c(), 'Montana'=c(), 'Nebraska'=c(), 'Nevada'=c(), 'New Hampshire'=c(), 'New Jersey'=c(), 'New Mexico'=c(), 'New York'=c(), 'North Carolina'=c(), 'North Dakota'=c(), 'Ohio'=c(), 'Oklahoma'=c(), 'Oregon'=c(), 'Pennsylvania'=c(), 'Rhode Island'=c(), 'South Carolina'=c(), 'South Dakota'=c(), 'Tennessee'=c(), 'Texas'=c(), 'Utah'=c(), 'Vermont'=c(), 'Virginia'=c(), 'Washington'=c(), 'West Virginia'=c(), 'Wisconsin'=c(), 'Wyoming'=c())
states_list <- list('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
states_list$Florida
states_list <- list('Alabama'=c(), 'Alaska'=c(), 'Arizona'=c(), 'Arkansas'=c(), 'California'=c(), 'Colorado'=c(), 'Connecticut'=c(), 'Delaware'=c(), 'District of Columbia'=c(), 'Florida'=c(), 'Georgia'=c(), 'Hawaii'=c(), 'Idaho'=c(), 'Illinois'=c(), 'Indiana'=c(), 'Iowa'=c(), 'Kansas'=c(), 'Kentucky'=c(), 'Louisiana'=c(), 'Maine'=c(), 'Maryland'=c(), 'Massachusetts'=c(), 'Michigan'=c(), 'Minnesota'=c(), 'Mississippi'=c(), 'Missouri'=c(), 'Montana'=c(), 'Nebraska'=c(), 'Nevada'=c(), 'New Hampshire'=c(), 'New Jersey'=c(), 'New Mexico'=c(), 'New York'=c(), 'North Carolina'=c(), 'North Dakota'=c(), 'Ohio'=c(), 'Oklahoma'=c(), 'Oregon'=c(), 'Pennsylvania'=c(), 'Rhode Island'=c(), 'South Carolina'=c(), 'South Dakota'=c(), 'Tennessee'=c(), 'Texas'=c(), 'Utah'=c(), 'Vermont'=c(), 'Virginia'=c(), 'Washington'=c(), 'West Virginia'=c(), 'Wisconsin'=c(), 'Wyoming'=c())
states_list$Florida
states_list$Florida <- c(states_list$Florida,2)
states_list$Florida
states_list$Florida <- c(states_list$Florida,2)
states_list$Florida
states_list <- list('Alabama'=c(), 'Alaska'=c(), 'Arizona'=c(), 'Arkansas'=c(), 'California'=c(), 'Colorado'=c(), 'Connecticut'=c(), 'Delaware'=c(), 'District of Columbia'=c(), 'Florida'=c(), 'Georgia'=c(), 'Hawaii'=c(), 'Idaho'=c(), 'Illinois'=c(), 'Indiana'=c(), 'Iowa'=c(), 'Kansas'=c(), 'Kentucky'=c(), 'Louisiana'=c(), 'Maine'=c(), 'Maryland'=c(), 'Massachusetts'=c(), 'Michigan'=c(), 'Minnesota'=c(), 'Mississippi'=c(), 'Missouri'=c(), 'Montana'=c(), 'Nebraska'=c(), 'Nevada'=c(), 'New Hampshire'=c(), 'New Jersey'=c(), 'New Mexico'=c(), 'New York'=c(), 'North Carolina'=c(), 'North Dakota'=c(), 'Ohio'=c(), 'Oklahoma'=c(), 'Oregon'=c(), 'Pennsylvania'=c(), 'Rhode Island'=c(), 'South Carolina'=c(), 'South Dakota'=c(), 'Tennessee'=c(), 'Texas'=c(), 'Utah'=c(), 'Vermont'=c(), 'Virginia'=c(), 'Washington'=c(), 'West Virginia'=c(), 'Wisconsin'=c(), 'Wyoming'=c())
states_dict <- list('Alabama'=c(), 'Alaska'=c(), 'Arizona'=c(), 'Arkansas'=c(), 'California'=c(), 'Colorado'=c(), 'Connecticut'=c(), 'Delaware'=c(), 'District of Columbia'=c(), 'Florida'=c(), 'Georgia'=c(), 'Hawaii'=c(), 'Idaho'=c(), 'Illinois'=c(), 'Indiana'=c(), 'Iowa'=c(), 'Kansas'=c(), 'Kentucky'=c(), 'Louisiana'=c(), 'Maine'=c(), 'Maryland'=c(), 'Massachusetts'=c(), 'Michigan'=c(), 'Minnesota'=c(), 'Mississippi'=c(), 'Missouri'=c(), 'Montana'=c(), 'Nebraska'=c(), 'Nevada'=c(), 'New Hampshire'=c(), 'New Jersey'=c(), 'New Mexico'=c(), 'New York'=c(), 'North Carolina'=c(), 'North Dakota'=c(), 'Ohio'=c(), 'Oklahoma'=c(), 'Oregon'=c(), 'Pennsylvania'=c(), 'Rhode Island'=c(), 'South Carolina'=c(), 'South Dakota'=c(), 'Tennessee'=c(), 'Texas'=c(), 'Utah'=c(), 'Vermont'=c(), 'Virginia'=c(), 'Washington'=c(), 'West Virginia'=c(), 'Wisconsin'=c(), 'Wyoming'=c())
states_list <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
for (i in c(1:497)){
if (table[i,]$states=="All"){
for (states in states_list){
states_dict$states <- c(states_dict$states,table[[i]]$MONTH)
}
}
}
states_dict
table[1,]$states
table[495,]$states
for (i in c(1:2)){
if (table[i,]$states=="All"){
for (states in states_list){
states_dict$states <- c(states_dict$states,table[[i]]$MONTH)
}
}
}
if (table[1,]$states=="All"){
for (states in states_list){
states_dict$states <- c(states_dict$states,table[[i]]$MONTH)
}
}
states_list
for (i in c(1:2)){
if (table[i,]$states=="All"){
for (states in states_list){
states_dict$states <- c(states_dict$states,table[i,]$MONTH)
}
}
}
states_dict
for (i in c(1:2)){
if (table[i,]$states=="All"){
for (state1 in states_list){
states_dict$state1 <- c(states_dict$state1,table[i,]$MONTH)
}
}
}
states_dict
states_dict$Wyoming
states_dict$Wyoming <- c(states_dict$Wyoming,table[i,]$MONTH)
states_dict
states_list
runApp('Final')
runApp('Final')
runApp('Final')
states_list <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="California"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="California"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="Oklahoma"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
#需要操作table
hist(table$MONTH,xlim=c(0,12),breaks=c(0:12))
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="us-ny"))
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="us-ny"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
#需要操作table
hist(table$MONTH,xlim=c(0,12),breaks=c(0:12))
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="ny"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
table
runApp('Final')
endpoint <- "https://calendarific.com/api/v2/holidays"
html1 <- read_html("https://calendarific.com/supported-countries")
country_list <- html1 %>% html_nodes("td") %>% html_node("a")%>% html_text %>% na.omit
country_abb <- html1 %>% html_nodes("td.text-center") %>% html_text %>% na.omit
name_to_abb <- function(name){
country_abb[which(country_list==name)]
}
list1  <- function(x){table$type[[x]][1]}
states_list <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
get_table <- function(r){
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}}
shiny::runApp('Final')
get_table <- function(r){
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}}
states_list <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
list1  <- function(x){table$type[[x]][1]}
endpoint <- "https://calendarific.com/api/v2/holidays"
html1 <- read_html("https://calendarific.com/supported-countries")
country_list <- html1 %>% html_nodes("td") %>% html_node("a")%>% html_text %>% na.omit
country_abb <- html1 %>% html_nodes("td.text-center") %>% html_text %>% na.omit
name_to_abb <- function(name){
country_abb[which(country_list==name)]
}
library(shinyBS)
library(shiny)
library(tidyverse)
library(jsonlite)
library(lubridate)
library(httr)
library(rvest)
library(maps)
library(lubridate)
library(shinythemes)
runApp('Final')
shiny::runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
endpoint <- "https://calendarific.com/api/v2/holidays"
html1 <- read_html("https://calendarific.com/supported-countries")
country_list <- html1 %>% html_nodes("td") %>% html_node("a")%>% html_text %>% na.omit
country_abb <- html1 %>% html_nodes("td.text-center") %>% html_text %>% na.omit
name_to_abb <- function(name){
country_abb[which(country_list==name)]
}
list1  <- function(x){table$type[[x]][1]}
states_list <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming')
get_table <- function(r){
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}}
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
table=get_table(r)
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
}
table
length(table)
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
table$type
table$country$name
table$country
r
get_table(r)
runApp('Final')
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
r
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
get_table <- function(r){
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}}
get_table(r)
get_table <- function(r){
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
if (length(table)==0){print("Oops! There seems no data in the database that you want. Please change year or month.")}else{
table <- table %>% mutate(country=table$country$name,date=as.character(as.Date(table$date$iso)),type=sapply(1:length(table$type),list1),states=NULL)
return(table)}}
get_table(r)
runApp('Final')
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="MA"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL,states=NULL)
#需要操作table
hist(table$MONTH,xlim=c(0,12),breaks=c(0:12))
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="MA"))
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="MA"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="ma"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="MA"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table
table[41,]$states
state.abb("Arizona")
?state.abb
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country="us", year=2020,location="us-az"))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,type=NULL,locations=NULL)
table[41,]$states
table
state.abb(California)
#需要操作table
state.abb(California)
library(state)
install.packages("state")
data(state)
state.abb("Ca")
View(state)
View(state.x77)
state.abb
cbind(state.name,state.abb)
length(states_list)
cbind(states_list,state.abb)
state_to_abb <- function(state){
cbind(state.name,state.abb) %>% filter(state.name==state)
}
state_to_abb("California")
state_to_abb <- function(state){
cbind(state.name,state.abb) %>% as.data.frame %>% filter(state.name==state)
}
state_to_abb("California")
state_to_abb <- function(state){
info <- cbind(state.name,state.abb) %>% as.data.frame %>% filter(state.name==state)
return(str_to_lower(info$state.abb))
}
state_to_abb("California")
state_to_abb <- function(state){
info <- cbind(state.name,state.abb) %>% as.data.frame %>% filter(state.name==state)
return(paste("us-",str_to_lower(info$state.abb),sep=""))
}
state_to_abb("California")
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
state_to_abb <- function(state){
info <- cbind(state.name,state.abb) %>% as.data.frame %>% filter(state.name==state)
return(paste("us-",str_to_lower(info$state.abb),sep=""))
}
r <- GET(endpoint,query=list(api_key="0da63e827fe1ca08ed95f28d98396bc99cce4fe8", country=name_to_abb("United States"), year=2020,location=state_to_abb("California")))
json <- content(r, as = "text",encoding = "UTF-8")
table <- fromJSON(json)$response$holidays
table <- table %>% mutate(MONTH=table$date$datetime$month,DAY=NULL,country=NULL,description=NULL,date=NULL,locations=NULL,states=NULL)
table
table$type
table$type %>% unlist
table$type %>% unlist %>% summarize
table$type %>% unlist
table$type %>% unlist %>% factor
table$type %>% unlist %>% factor %>% summarize
table$type %>% unlist %>% factor %>% group_by
table$type %>% unlist %>% factor %>% count
table$type %>% unlist %>% factor
table$type %>% unlist
table$type %>% unlist %>% as.data.frame
table$type
table
table$type
table$type %>% unlist %>% as.data.frame
df <- table$type %>% unlist %>% as.data.frame
colnames(df) <- c("TYPE")
df
df <- table$type %>% unlist %>% as.data.frame %>% group_by(TYPE) %>% count()
colnames(df) <- c("TYPE")
df <- table$type %>% unlist %>% as.data.frame %>% group_by(TYPE) %>% count()
df <- table$type %>% unlist %>% as.data.frame %>% group_by("TYPE") %>% count()
df <- table$type %>% unlist
colnames(df) <- c("TYPE")
df
df <- table$type %>% unlist %>% as.data.frame
colnames(df) <- c("TYPE")
df %>% group_by("TYPE") %>% count()
df
df %>% group_by(TYPE) %>% count()
runApp('Final')
runApp('Final')
runApp('Final')
?textOutput
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
runApp('Final')
